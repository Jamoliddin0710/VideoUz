<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ollama Chat</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #f8f9fc;
            --text-color: #333;
            --light-gray: #f1f3f9;
            --dark-gray: #5a5c69;
            --danger: #e74a3b;
            --success: #1cc88a;
        }

        body {
            font-family: 'Nunito', 'Segoe UI', Roboto, sans-serif;
            background-color: var(--secondary-color);
            color: var(--text-color);
            line-height: 1.6;
        }

        .chat-container {
            max-width: 950px;
            margin: 30px auto;
            padding: 0;
            border-radius: 15px;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            background-color: white;
            overflow: hidden;
        }

        .chat-header {
            background-color: var(--primary-color);
            color: white;
            padding: 20px;
            border-top-left-radius: 15px;
            border-top-right-radius: 15px;
            position: relative;
        }

        .chat-header h2 {
            margin: 0;
            font-weight: 700;
            font-size: 1.75rem;
        }

        .model-container {
            padding: 15px 20px;
            background-color: var(--light-gray);
            border-bottom: 1px solid rgba(0,0,0,0.1);
        }

        .model-select-container {
            position: relative;
        }

        .model-select-container:after {
            content: '\f078';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            pointer-events: none;
            color: var(--dark-gray);
        }

        #modelSelect {
            appearance: none;
            background-color: white;
            border: 1px solid #d1d3e2;
            border-radius: 8px;
            padding: 10px 15px;
            font-size: 0.9rem;
            font-weight: 500;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

        #modelSelect:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
            outline: none;
        }

        .chat-box {
            height: 450px;
            overflow-y: auto;
            padding: 20px;
            background-color: white;
            scrollbar-width: thin;
        }

        .chat-box::-webkit-scrollbar {
            width: 6px;
        }

        .chat-box::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        .chat-box::-webkit-scrollbar-thumb {
            background: #cfd8dc;
            border-radius: 3px;
        }

        .chat-message {
            position: relative;
            margin-bottom: 15px;
            max-width: 80%;
            border-radius: 12px;
            padding: 12px 15px;
            line-height: 1.5;
            animation: fadeIn 0.3s ease;
        }

        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .user-message {
            background-color: var(--primary-color);
            color: white;
            margin-left: auto;
            border-bottom-right-radius: 4px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .bot-message {
            background-color: var(--light-gray);
            color: var(--text-color);
            margin-right: auto;
            border-bottom-left-radius: 4px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        .message-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 5px;
        }

        .message-sender {
            font-weight: 600;
            font-size: 0.85rem;
        }

        .message-actions {
            visibility: hidden;
            opacity: 0;
            transition: visibility 0s, opacity 0.2s linear;
        }

        .chat-message:hover .message-actions {
            visibility: visible;
            opacity: 1;
        }

        .action-button {
            background: transparent;
            border: none;
            color: inherit;
            opacity: 0.7;
            cursor: pointer;
            padding: 2px;
            margin-left: 5px;
            font-size: 0.85rem;
            transition: opacity 0.2s ease;
        }

        .action-button:hover {
            opacity: 1;
        }

        .delete-button {
            color: var(--danger);
        }

        .copy-button {
            color: var(--dark-gray);
        }

        .chat-input-container {
            padding: 15px 20px;
            background-color: var(--light-gray);
            border-top: 1px solid rgba(0,0,0,0.1);
        }

        .chat-input-group {
            display: flex;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        #messageInput {
            flex-grow: 1;
            border: none;
            padding: 12px 15px;
            font-size: 0.95rem;
            background-color: white;
        }

        #messageInput:focus {
            outline: none;
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }

        #sendButton {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 0 20px;
            font-weight: 600;
            transition: background-color 0.2s ease;
        }

        #sendButton:hover {
            background-color: #2e59d9;
        }

        #sendButton:disabled {
            background-color: #8fa6e9;
            cursor: not-allowed;
        }

        .clear-chat-button {
            position: absolute;
            top: 50%;
            right: 20px;
            transform: translateY(-50%);
            background-color: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            border-radius: 6px;
            padding: 8px 12px;
            font-size: 0.85rem;
            font-weight: 600;
            transition: background-color 0.2s ease;
        }

        .clear-chat-button:hover {
            background-color: rgba(255, 255, 255, 0.3);
        }

        .typing-indicator {
            display: none;
            background-color: var(--light-gray);
            padding: 10px 15px;
            border-radius: 12px;
            margin-bottom: 15px;
            max-width: 80px;
            margin-right: auto;
            border-bottom-left-radius: 4px;
        }

        .typing-indicator span {
            height: 8px;
            width: 8px;
            background-color: var(--dark-gray);
            display: inline-block;
            border-radius: 50%;
            margin-right: 5px;
            animation: typing 1.3s ease-in-out infinite;
        }

        .typing-indicator span:nth-child(2) {
            animation-delay: 0.15s;
        }

        .typing-indicator span:nth-child(3) {
            animation-delay: 0.3s;
            margin-right: 0;
        }

        @@keyframes typing {
            0% { transform: translateY(0); }
            50% { transform: translateY(-5px); }
            100% { transform: translateY(0); }
        }

        .model-badge {
            display: inline-block;
            padding: 4px 8px;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 4px;
            font-size: 0.8rem;
            margin-left: 10px;
            font-weight: normal;
        }

        .empty-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            color: var(--dark-gray);
            text-align: center;
            padding: 20px;
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.6;
        }

        .empty-state h3 {
            margin-bottom: 10px;
            font-weight: 600;
        }

        .empty-state p {
            max-width: 400px;
            margin-bottom: 20px;
            opacity: 0.8;
        }

        .empty-state-suggestions {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
            margin-top: 10px;
        }

        .suggestion-chip {
            background-color: var(--light-gray);
            border: 1px solid rgba(0,0,0,0.1);
            border-radius: 20px;
            padding: 6px 12px;
            font-size: 0.85rem;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .suggestion-chip:hover {
            background-color: var(--primary-color);
            color: white;
        }

        @@media (max-width: 768px) {
            .chat-container {
                margin: 0;
                max-width: 100%;
                height: 100vh;
                border-radius: 0;
            }

            .chat-header {
                border-radius: 0;
            }

            .chat-box {
                height: calc(100vh - 200px);
            }
        }
    </style>
</head>
<body>
<div class="chat-container">
    <div class="chat-header">
        <h2>Ollama Chat <span class="model-badge" id="currentModel">llama2:latest</span></h2>
        <button class="clear-chat-button" id="clearAllButton">
            <i class="fas fa-trash-alt"></i> Clear Chat
        </button>
    </div>

    <div class="model-container">
        <div class="model-select-container">
            <select class="form-control" id="modelSelect">
                <option value="llama2:latest">Llama 2</option>
                <option value="llama3:latest">Llama 3</option>
            </select>
        </div>
    </div>

    <div class="chat-box" id="chatBox">
        <div class="empty-state" id="emptyState">
            <i class="fas fa-robot"></i>
            <h3>Welcome to Ollama Chat</h3>
            <p>Start a conversation with the selected AI model. Ask anything or try one of these examples:</p>
            <div class="empty-state-suggestions">
                <div class="suggestion-chip">Tell me about Uzbekistan</div>
                <div class="suggestion-chip">Explain quantum computing</div>
                <div class="suggestion-chip">Help me with a Python program</div>
                <div class="suggestion-chip">Create a short story</div>
            </div>
        </div>
    </div>

    <div class="typing-indicator" id="typingIndicator">
        <span></span>
        <span></span>
        <span></span>
    </div>

    <div class="chat-input-container">
        <div class="chat-input-group">
            <input type="text" id="messageInput" placeholder="Type your message...">
            <button id="sendButton">
                <i class="fas fa-paper-plane"></i> Send
            </button>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        // Load available models
        $.get('/api/ollama/models', function(models) {
            $('#modelSelect').empty();
            models.forEach(function(model) {
                $('#modelSelect').append(new Option(model.name, model.name));
            });
        }).fail(function() {
            // If models can't be loaded, use the default options
            console.log("Couldn't load models, using defaults");
        });

        // Update current model badge when selection changes
        $('#modelSelect').change(function() {
            $('#currentModel').text($(this).val());
        });

        // Send message when button is clicked
        $('#sendButton').click(sendMessage);

        // Send message when Enter key is pressed
        $('#messageInput').keypress(function(e) {
            if(e.which == 13) {
                sendMessage();
            }
        });

        // Clear all chat messages
        $('#clearAllButton').click(function() {
            $('#chatBox').empty();
            $('#chatBox').append(`
                <div class="empty-state" id="emptyState">
                    <i class="fas fa-robot"></i>
                    <h3>Welcome to Ollama Chat</h3>
                    <p>Start a conversation with the selected AI model. Ask anything or try one of these examples:</p>
                    <div class="empty-state-suggestions">
                        <div class="suggestion-chip">Tell me about Uzbekistan</div>
                        <div class="suggestion-chip">Explain quantum computing</div>
                        <div class="suggestion-chip">Help me with a Python program</div>
                        <div class="suggestion-chip">Create a short story</div>
                    </div>
                </div>
            `);
            setupSuggestionChips();
        });

        // Handle suggestion chips
        function setupSuggestionChips() {
            $('.suggestion-chip').click(function() {
                const suggestion = $(this).text();
                $('#messageInput').val(suggestion);
                sendMessage();
            });
        }

        // Initial setup of suggestion chips
        setupSuggestionChips();

        // Send message to API
        function sendMessage() {
            var message = $('#messageInput').val().trim();
            if(message === '') return;

            // Hide empty state if visible
            $('#emptyState').hide();

            // Display user message
            const userMessageId = 'msg-' + Date.now();
            $('#chatBox').append(`
                <div class="chat-message user-message" id="${userMessageId}">
                    <div class="message-header">
                        <div class="message-sender">You</div>
                        <div class="message-actions">
                            <button class="action-button delete-button" data-target="${userMessageId}">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                            <button class="action-button copy-button" data-text="${message}">
                                <i class="fas fa-copy"></i>
                            </button>
                        </div>
                    </div>
                    <div class="message-content">${escapeHtml(message)}</div>
                </div>
            `);

            // Clear input
            $('#messageInput').val('');

            // Scroll to bottom
            scrollToBottom();

            // Show typing indicator
            $('#typingIndicator').show();

            // Send to API
            $.ajax({
                url: '/api/ollama/chat',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    model: $('#modelSelect').val(),
                    prompt: message,
                    stream: false
                }),
                beforeSend: function() {
                    $('#sendButton').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
                },
                success: function(data) {
                    // Hide typing indicator
                    $('#typingIndicator').hide();

                    // Add bot response
                    const botMessageId = 'msg-' + Date.now();
                    $('#chatBox').append(`
                        <div class="chat-message bot-message" id="${botMessageId}">
                            <div class="message-header">
                                <div class="message-sender">Ollama (${$('#modelSelect').val()})</div>
                                <div class="message-actions">
                                    <button class="action-button delete-button" data-target="${botMessageId}">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                    <button class="action-button copy-button" data-text="${escapeHtml(data.response)}">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="message-content">${formatMessage(data.response)}</div>
                        </div>
                    `);

                    // Scroll to bottom
                    scrollToBottom();

                    // Setup action buttons
                    setupActionButtons();
                },
                error: function(error) {
                    // Hide typing indicator
                    $('#typingIndicator').hide();

                    // Add error message
                    const errorMessageId = 'msg-' + Date.now();
                    $('#chatBox').append(`
                        <div class="chat-message bot-message" id="${errorMessageId}" style="background-color: #ffebee; color: #c62828;">
                            <div class="message-header">
                                <div class="message-sender">Error</div>
                                <div class="message-actions">
                                    <button class="action-button delete-button" data-target="${errorMessageId}">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="message-content">
                                <i class="fas fa-exclamation-circle"></i> 
                                An error occurred while processing your request. Please try again.
                            </div>
                        </div>
                    `);

                    console.error("API Error:", error);

                    // Scroll to bottom
                    scrollToBottom();

                    // Setup action buttons
                    setupActionButtons();
                },
                complete: function() {
                    $('#sendButton').prop('disabled', false).html('<i class="fas fa-paper-plane"></i> Send');
                }
            });
        }

        // Setup action buttons for messages
        function setupActionButtons() {
            // Delete button
            $('.delete-button').off('click').on('click', function() {
                const targetId = $(this).data('target');
                $('#' + targetId).fadeOut(300, function() {
                    $(this).remove();

                    // Show empty state if no messages left
                    if ($('.chat-message').length === 0) {
                        $('#emptyState').show();
                    }
                });
            });

            // Copy button
            $('.copy-button').off('click').on('click', function() {
                const textToCopy = $(this).data('text');
                navigator.clipboard.writeText(textToCopy).then(function() {
                    const button = $(this);
                    const originalHtml = button.html();

                    button.html('<i class="fas fa-check"></i>');
                    setTimeout(function() {
                        button.html(originalHtml);
                    }, 1500);
                }.bind(this)).catch(function(err) {
                    console.error("Could not copy text: ", err);
                });
            });
        }

        // Helper function to scroll chat to bottom
        function scrollToBottom() {
            $('#chatBox').animate({
                scrollTop: $('#chatBox')[0].scrollHeight
            }, 300);
        }

        // Format message - convert simple markdown to HTML
        function formatMessage(text) {
            if (!text) return '';

            // Convert code blocks
            text = text.replace(/```(\w+)?\n([\s\S]*?)```/g, '<pre><code>$2</code></pre>');

            // Convert inline code
            text = text.replace(/`([^`]+)`/g, '<code>$1</code>');

            // Convert bold
            text = text.replace(/\*\*([^*]+)\*\*/g, '<strong>$1</strong>');

            // Convert italic
            text = text.replace(/\*([^*]+)\*/g, '<em>$1</em>');

            // Convert links
            text = text.replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2" target="_blank">$1</a>');

            // Convert newlines to <br>
            text = text.replace(/\n/g, '<br>');

            return text;
        }

        // Helper function to escape HTML
        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }
    });
</script>
</body>
</html>